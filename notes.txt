Smart Irrigation AI Pipeline

1️⃣ Data Acquisition
We’ll pull data from:
Weather APIs (OpenWeatherMap, Weatherstack)
Soil Data APIs (SoilGrids)
Satellite & Agricultural Data (FAO, Copernicus)
Get IOT Data for those who have these data

2️⃣ Data Processing
Feature engineering: Soil moisture, evapotranspiration, drought conditions
Data fusion: Combining sensor data with weather and soil properties
Data cleaning: Handling missing values and normalizing inputs

3️⃣ AI Model Training
Reinforcement Learning (RL) for irrigation control
GANs for forecasting drought & water price (help farmers make scenarios for if less watering for instance (as well))
LLM + RAG for explainable AI

4️⃣ Deployment
Autonomous control via IoT, Send data to valves directly (think about different types of valve systems design (either one for all or one per patch or more than that))
Farmer dashboard (UI + chatbot)
API to fetch real-time irrigation recommendations

TODOs:
Check getting the data and processing first
Black
Relative paths
Constants
Make sure all works (for now almost nothin is functionnal but api and streamlit)
Enhance app
Enhance streamlit
Split work
Deploy airflow ?
Should we use dagshub ?
Look at what models we want to use
Prepare for presentation questions (culture)

Yes, splitting into two separate APIs on different servers makes sense if you want:

Scalability – RL and GAN models may have different computational needs.
Independent Deployment – If RL runs in real-time and GAN processes batch forecasts, keeping them separate avoids bottlenecks.
Resilience – If one model fails, the other remains operational.
Optimized Resources – The RL API can be lightweight, while the GAN API might require a GPU.
